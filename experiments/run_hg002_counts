#!/bin/bash
K=$1
L=$2
DENSITY=$3
P=$4
T=$5
abund=$6
threshold=$7
distance=2
C=$8
TH=$9
touch bench/hg002-bench-$1$2.txt
cp ../dsk/build/bin/* .
./dsk -file /scratch1/ekim/HG002_hifi/HG002_hifi_hpc.fa -kmer-size $L
./dsk2ascii -file HG002_hifi_hpc.h5 -out HG002_hifi_hpc.ascii.txt
#echo "Running reference..."
#cargo run --manifest-path ../rust-mhdbg/Cargo.toml --release -- /scratch2/ekim/dmel_ref_hpc.fa -k $K -l $L -t 1 --lmer-counts-max $C --threads $TH --density $DENSITY --minabund 1 --levenshtein-minimizers 0 --prefix canu_hifi_ref --reference --no-error-correct --lmer-counts canu_hifi_hpc.ascii.txt
start=`date +%s`
echo "Running reads..."

command time -v cargo run --manifest-path ../rust-mhdbg/Cargo.toml --release -- /scratch1/ekim/HG002_hifi/HG002_hifi_hpc.fa -k $K -l $L --presimp $P --lmer-counts-max $C --density $DENSITY --threads $TH --minabund $abund --correction-threshold $threshold --lmer-counts HG002_hifi_hpc.ascii.txt --distance $distance --no-error-correct --prefix hg002_hifi 2>&1 | tee -a bench/hg002-bench-$1$2.txt
end=`date +%s`
echo "Completing GFA..."
python utils/complete_gfa.py hg002_hifi.sequences hg002_hifi.gfa
#echo "Comparing k-mers..."
#python utils/compare_kmers.py canu_hifi_ref.sequences canu_hifi.sequences
runtime=$((end-start))
echo "Runtime was $runtime seconds."
